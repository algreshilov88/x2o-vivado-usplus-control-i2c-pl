// Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.2.2 (lin64) Build 3788238 Tue Feb 21 19:59:23 MST 2023
// Date        : Wed Aug  9 18:48:02 2023
// Host        : uftrig01 running 64-bit Ubuntu 18.04.6 LTS
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ design_1_axi_chip2chip_1_0_sim_netlist.v
// Design      : design_1_axi_chip2chip_1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xck26-sfvc784-2LV-c
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_axi_chip2chip_1_0,axi_chip2chip_v5_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_18,Vivado 2022.2.2" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWID" *) input [5:0]s_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BID" *) output [5:0]s_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARID" *) input [5:0]s_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RID" *) output [5:0]s_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 99999001, ID_WIDTH 6, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 93750000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [31:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [31:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [31:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [30:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [5:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [5:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [5:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [5:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire [31:31]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[31] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[30:0] = \^axi_c2c_aurora_tx_tdata [30:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "2" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* AFIFO_DATA_SIZE = "50" *) 
  (* AFIFO_DATA_SIZE_M2 = "0" *) 
  (* AFIFO_DATA_SIZE_M3 = "2" *) 
  (* AFIFO_DATA_SIZE_M4 = "2" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "50" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "8" *) 
  (* BFIFO_WIDTH = "8" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "32" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "6" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "0" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "0" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "1" *) 
  (* C_INTERFACE_TYPE = "3" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "20" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "9" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "2" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "2" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "0" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "32" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "41" *) 
  (* RFIFO_DATA_SIZE_M2 = "1" *) 
  (* RFIFO_DATA_SIZE_M3 = "2" *) 
  (* RFIFO_DATA_SIZE_M4 = "1" *) 
  (* RFIFO_TIE_WIDTH = "2" *) 
  (* RFIFO_WIDTH = "42" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_18 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata({NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED[31],\^axi_c2c_aurora_tx_tdata }),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[8:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[5:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[5:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(s_axi_arid),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(s_axi_awid),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__10
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__11
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__12
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__13
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_19
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_27
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_39
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_8
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_21
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_28
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_31
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_40
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_43
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_29
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_41
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_33
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_45
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_12
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_2
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_9
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_10
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_14
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "42" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "42" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "21504" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "42" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "42" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "8" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "8" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "2048" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "8" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "8" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "3" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_35 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_36 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_37 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_38 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_39 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_40 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_41 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_42 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_43 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_44 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_45 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_0 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_1 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_2 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_3 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "21504" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "42" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "42" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [41:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_4 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_5 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_6 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_7 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_8 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "42" *) 
  (* BYTE_WRITE_WIDTH_B = "42" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "41" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "42" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "21504" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "42" *) 
  (* P_MIN_WIDTH_DATA_A = "42" *) 
  (* P_MIN_WIDTH_DATA_B = "42" *) 
  (* P_MIN_WIDTH_DATA_ECC = "42" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "42" *) 
  (* P_WIDTH_COL_WRITE_B = "42" *) 
  (* READ_DATA_WIDTH_A = "42" *) 
  (* READ_DATA_WIDTH_B = "42" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "42" *) 
  (* WRITE_DATA_WIDTH_B = "42" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [41:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_9 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_10 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_11 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_12 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_13 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_14 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "2048" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "8" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "8" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "3" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [7:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_16 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_17 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_19 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "8" *) 
  (* BYTE_WRITE_WIDTH_B = "8" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "2048" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "8" *) 
  (* P_MIN_WIDTH_DATA_A = "8" *) 
  (* P_MIN_WIDTH_DATA_B = "8" *) 
  (* P_MIN_WIDTH_DATA_ECC = "8" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "8" *) 
  (* P_WIDTH_COL_WRITE_B = "8" *) 
  (* READ_DATA_WIDTH_A = "8" *) 
  (* READ_DATA_WIDTH_B = "8" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "8" *) 
  (* WRITE_DATA_WIDTH_B = "8" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "8" *) 
  (* rstb_loop_iter = "8" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [7:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_20 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_21 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_22 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_23 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_24 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_27 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_28 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_29 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_30 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_31 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_32 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_33 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_11
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_20
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_30
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_42
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_17
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_23
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_35
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_37
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_0
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_16
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_24
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_36
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_38
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_4
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_6
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_1
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_5
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_7
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__11 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__10 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__13 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__12 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "no_ecc" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "50" *) 
(* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) (* P_MIN_WIDTH_DATA_ECC = "50" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "50" *) 
(* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) (* READ_DATA_WIDTH_B = "50" *) 
(* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) 
(* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) (* rstb_loop_iter = "52" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "50" *) (* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) 
(* P_MIN_WIDTH_DATA_ECC = "50" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "50" *) (* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) 
(* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) 
(* rstb_loop_iter = "52" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "42" *) (* BYTE_WRITE_WIDTH_B = "42" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "21504" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "42" *) (* P_MIN_WIDTH_DATA_A = "42" *) (* P_MIN_WIDTH_DATA_B = "42" *) 
(* P_MIN_WIDTH_DATA_ECC = "42" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "42" *) (* P_WIDTH_COL_WRITE_B = "42" *) (* READ_DATA_WIDTH_A = "42" *) 
(* READ_DATA_WIDTH_B = "42" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "42" *) (* WRITE_DATA_WIDTH_B = "42" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "44" *) 
(* rstb_loop_iter = "44" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [41:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [41:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [41:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [41:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [41:0]dina;
  wire [41:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:10]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "41" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "41" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "21504" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "41" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[41:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:10],doutb[41:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "8" *) (* BYTE_WRITE_WIDTH_B = "8" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "2048" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "8" *) (* P_MIN_WIDTH_DATA_A = "8" *) (* P_MIN_WIDTH_DATA_B = "8" *) 
(* P_MIN_WIDTH_DATA_ECC = "8" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "8" *) (* P_WIDTH_COL_WRITE_B = "8" *) (* READ_DATA_WIDTH_A = "8" *) 
(* READ_DATA_WIDTH_B = "8" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "8" *) (* WRITE_DATA_WIDTH_B = "8" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "8" *) 
(* rstb_loop_iter = "8" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [7:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [7:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [7:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [7:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][3]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][4]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][5]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][6]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][7]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
YEwuPQIHbkNDxQTeJTgkCVtVyqjBl4yBT+ZdviOr5zOUwfBKlWmE/tdCpADfBjlYqHApCKC9J/KV
Dho7b9EK4z3UPM4HB59BVcpaf37TbLQoqXe5Qy+ZA8X2rpQ7anVwICWUzYfeqpxlmAQLM8k4m3LQ
Fz0nKRbV7kvaOcc2pV8=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
WxOA6j/Kp74/BxxZisufnr4b3mYL4T7rvvcojBGwIZ1KclJna4jz7Q7fiUZMPrU/w5Z99z6ZV+hf
CGcyAffgvFT0vL3OzPA3/28+M6DIkgfq6HCFug/SAnlWNYsRA92gn5qBcUuln1UCcigMaaBkzyT7
qz5N0yl/froFhWJzX72DdDrgg//FqWniS1judDCyy6xxI7xB6ypI5jzuOmnCWoKiwaxywSXOENLk
hDu253qM7830D8c9NkMoK8kj996bVroXVZFc3ej86w0Eu9yXzlvGbWptnm7zvGRTkg/JHnxm20Qp
6hNSmqlQ4mBJK+FLsEmVLwcYr3RkGOSEMOFDFw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dnunDDVo9fB1olePgQuAxW9wNZXJF5H0Nm87vAePdSNktn5aBagpZI8J0ow7FRWzu+KcGngQjnF7
4wzGYBXiEyntf74LVYLh+I+buv/mJAOKSZ9lMXKhiMrDjbavcTm8IjELUEY4cwg0G9N+Qye26y2E
GZ3fBVIALWFkw1Xpi2E=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Q38vLdfubSnkU/paQVe4Q1Y7meHOoRcHy+9qRBWeJg6kZtXacAlbXubeuULHqvYR2eFAMvep+mJd
7UF8jCW5DID2Mxrpfq+dUYTNzeiTctDHbWdOdsmOSDcsRPa2lOUOJbRMsJW1yQkiC1gbrN8RzFeR
3AxUO/Bmu/mJcXv5I5kUvuJTugwaRdiKiwSTh9BnrK8edLVw+Ye4iU8XRa+JLMzMB5KGRDCI+E+K
+JyJStw7P5zf16BmPfbmIdxWp0zzJGpMy/nIHARt3ZLNvdqiw2y921dcDE0nsPSR7dv2Rfisiyu5
BMsLuPDad4MomOJkq5TaAB2HP3QEDq2ZoCHf2g==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
PoNIh1XcE/oxeY9Uh1A5mUjj08uQn/LGSREpi81gngDBHu14g3HJ66Rk0t3P1K2klku4khb6t5Mj
ey0AqtN1hlCuCXnaUb/cI/ql0HWSHlOZezfm7x5KenNM96b68TwVdFEQslTCCMPCQTYLrapZ2JzB
X02QFxLbe9qu3MLM8+/61uHScFmz0Md4A79dTJMPWDaZaZEEW77Y2rDiemJqaaJgTD+fSQZQK/hp
KFJGfDWGtHLk0UtJXg9h5wV+BMzEHP0+sw1YitBhvup7Zgc6VGGHnUyfN/iXsV/LseV5UB8gjQs+
45AwXiOz+oyirKP98/LtclChNhG6hds747iHRA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
i3pgY3WqfETihIlHhRX023Ev+OgDcbLZ3Iw/0tjqWCGe+vMwEAlG2MbXPqCSuw6yPhapCRaOuX4y
S9R6Nz74ZMzgR5yXu7QCwo9PucEWNcouvu3t4+2jx1GrqPe/6+ijPiKt1bZxrj/lYjm2GDHOPbw0
HknL9I3Xp8TZRwX+WmtolRRFoIqdw/YtLfjZFhsYIJsxJvllaiSmC+rtWZ4HlWs/L6T9torAX6ok
waN0gPBqFnvkZHOKY7w7+NRwFsqdPgo06UZzSeJiJjCnSKJTQXGRmBxAAD5E3/Y/NmHzLMEUojiy
Ugw1nDu71CNj31OYsir3FlkuD6nF/UgZCXbCVQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
vXGWecqsU5ayIM8rEQCarKtCSjMACo/Ipl8Ii3dVvIKKElIMsry3unczGS0tZQHcU4wIkQo15B5G
sQP+2FqanIcC0kN3An9oZtKReyCFTkNCAwWPiN26XBg72hLpGhhCsOOPltCWKLoKNLrWhFY7B+HI
Xkon7lE5+U9nhGUxv7S3mDAf7ypLmbKDxPUjyBMhza+xcs0I1tbBzqJGJJ5J9Wb1CoVbDmIzP3Q1
5/9qh/dMGpnNoOpXHSTK4mODJ0ncSVyOex5Ba4EB7nhh6jY22b/VP8BMfLlOIFiWT9otlktCZoja
/fYL+03TC8Kp61X1fDXxO8jeoJE7lRWgjMZzyw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
g/eX4c+WUcQm+3kzvGd2g48l+WCw1XLKz/gptoyJKTHJlebblsnR4zoUmerFZjejyMtHFNwNzFcL
ZYbCnWO3V2pscZeJaQ2r9Smpyj4TGH9+USIn2pVRW82qx98fze/MHczey4N5V/QGNZO1ehHwn74C
xmIwRoGgddEKcObJPNOH++zxVTZ9FAwkLqE5Sb5rnvvOVCn9yuAqmMaGXu80+Jsy0+erPvTHASu9
MV0y/OeR5rvoiAP3/k7GwdhTYWBkNRuViPoURQB0NGFKz2W76nhcLcM5PDe5ut9ouQHEO8nvgf7i
VmcLHNO67etWSsG2Yi0Kgmrp8A3tVRzstU68fdjQCcloyh87RPw4kiOxPNt5hRv0gAMYVVVQsbk2
bFV6LKImZKZmXnvIk8ISHKtN9+4NmNlKbiW6YhP4HrJSSBvuVIE/ZbO6DNNsh7wNAQLLMWFMXBZI
vR44dscjH30C4vEXqq+vKZal6eGCbiyjFF3CwXlz0UHmmAekPWXICxcf

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
myUe+gs19essf/diefiuLWzV3JeCvMD/bYb4hYdMEtspksZUxPpd4T2QcONYWwd/Qc50hI7kZMQg
o+x9lAPcv4BQl2S57nN8pKvQ0j24qV2XLON3jWoybvBxSPluSgNPosEs8UtYehW3RrxcZ2trRQy+
nrSZo4HWtEtUUTmZoDTgAB7HzwG9nJNoDXMJVHdwg5aWsPUxSkZEwywL5EV3rgNNpemqyu56YmyO
wzDZxJSMglPpQCq/+Xsg7ZOOW8ZXnAQLx2yduHGCnUWOHo5KqKed30SiHLz58xAwXNI5AW06+mSI
NmUxSFV4GACM8gdLuzWB6Masc4wsEggjlLVkGQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 298816)
`pragma protect data_block
+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
ik52WUaSh1l1Ycp2ioRNUMkbXgESuw==
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
