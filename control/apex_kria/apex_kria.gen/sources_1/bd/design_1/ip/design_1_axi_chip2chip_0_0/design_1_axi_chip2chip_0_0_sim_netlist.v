// Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.2.2 (lin64) Build 3788238 Tue Feb 21 19:59:23 MST 2023
// Date        : Wed Aug  9 18:48:02 2023
// Host        : uftrig01 running 64-bit Ubuntu 18.04.6 LTS
// Command     : write_verilog -force -mode funcsim -rename_top design_1_axi_chip2chip_0_0 -prefix
//               design_1_axi_chip2chip_0_0_ design_1_axi_chip2chip_1_0_sim_netlist.v
// Design      : design_1_axi_chip2chip_1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xck26-sfvc784-2LV-c
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_axi_chip2chip_1_0,axi_chip2chip_v5_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_18,Vivado 2022.2.2" *) 
(* NotValidForBitStream *)
module design_1_axi_chip2chip_0_0
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWID" *) input [5:0]s_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BID" *) output [5:0]s_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARID" *) input [5:0]s_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RID" *) output [5:0]s_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 99999001, ID_WIDTH 6, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 93750000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [31:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [31:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [31:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [30:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [5:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [5:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [5:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [5:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire [31:31]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[31] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[30:0] = \^axi_c2c_aurora_tx_tdata [30:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "2" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* AFIFO_DATA_SIZE = "50" *) 
  (* AFIFO_DATA_SIZE_M2 = "0" *) 
  (* AFIFO_DATA_SIZE_M3 = "2" *) 
  (* AFIFO_DATA_SIZE_M4 = "2" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "50" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "8" *) 
  (* BFIFO_WIDTH = "8" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "32" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "6" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "0" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "0" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "1" *) 
  (* C_INTERFACE_TYPE = "3" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "20" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "9" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "2" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "2" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "0" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "32" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "41" *) 
  (* RFIFO_DATA_SIZE_M2 = "1" *) 
  (* RFIFO_DATA_SIZE_M3 = "2" *) 
  (* RFIFO_DATA_SIZE_M4 = "1" *) 
  (* RFIFO_TIE_WIDTH = "2" *) 
  (* RFIFO_WIDTH = "42" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  design_1_axi_chip2chip_0_0_axi_chip2chip_v5_0_18 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata({NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED[31],\^axi_c2c_aurora_tx_tdata }),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[8:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[5:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[5:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(s_axi_arid),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(s_axi_awid),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__10
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__11
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__12
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__13
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module design_1_axi_chip2chip_0_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn_19
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn_27
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn_39
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn_8
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_21
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_28
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_31
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_40
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_43
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_29
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_41
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2_33
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2_45
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_12
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_2
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_9
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_10
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized5_14
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_0_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "42" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "42" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "21504" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "42" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "42" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "8" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "8" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "2048" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "8" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "8" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "3" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_0_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_35 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_36 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_37 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_38 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn_39 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  design_1_axi_chip2chip_0_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_40 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_41 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_42 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_43 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_44 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2_45 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_0 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_1 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_2 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_3 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "21504" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "42" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "42" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [41:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_4 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_5 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_6 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_7 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn_8 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "42" *) 
  (* BYTE_WRITE_WIDTH_B = "42" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "41" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "42" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "21504" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "42" *) 
  (* P_MIN_WIDTH_DATA_A = "42" *) 
  (* P_MIN_WIDTH_DATA_B = "42" *) 
  (* P_MIN_WIDTH_DATA_ECC = "42" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "42" *) 
  (* P_WIDTH_COL_WRITE_B = "42" *) 
  (* READ_DATA_WIDTH_A = "42" *) 
  (* READ_DATA_WIDTH_B = "42" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "42" *) 
  (* WRITE_DATA_WIDTH_B = "42" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [41:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_9 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_10 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_11 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized3_12 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized4_13 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized5_14 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "2048" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "8" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "8" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "3" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [7:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_16 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_17 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn_19 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "8" *) 
  (* BYTE_WRITE_WIDTH_B = "8" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "2048" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "8" *) 
  (* P_MIN_WIDTH_DATA_A = "8" *) 
  (* P_MIN_WIDTH_DATA_B = "8" *) 
  (* P_MIN_WIDTH_DATA_ECC = "8" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "8" *) 
  (* P_WIDTH_COL_WRITE_B = "8" *) 
  (* READ_DATA_WIDTH_A = "8" *) 
  (* READ_DATA_WIDTH_B = "8" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "8" *) 
  (* WRITE_DATA_WIDTH_B = "8" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "8" *) 
  (* rstb_loop_iter = "8" *) 
  design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [7:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_20 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_21 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_22 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_23 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_24 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_25 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn_27 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  design_1_axi_chip2chip_0_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_28 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_29 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_30 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized0_31 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized1_32 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_counter_updn__parameterized2_33 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_11
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_20
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_30
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_bit_42
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_17
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_23
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_25
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_35
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec_37
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_0
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_16
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_18
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_24
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_26
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_36
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_38
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_4
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized0_6
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_1
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_5
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_reg_vec__parameterized1_7
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

module design_1_axi_chip2chip_0_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__11 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__10 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__13 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__12 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_0_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_0_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "no_ecc" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "50" *) 
(* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) (* P_MIN_WIDTH_DATA_ECC = "50" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "50" *) 
(* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) (* READ_DATA_WIDTH_B = "50" *) 
(* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) 
(* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) (* rstb_loop_iter = "52" *) 
module design_1_axi_chip2chip_0_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "50" *) (* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) 
(* P_MIN_WIDTH_DATA_ECC = "50" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "50" *) (* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) 
(* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) 
(* rstb_loop_iter = "52" *) 
module design_1_axi_chip2chip_0_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "42" *) (* BYTE_WRITE_WIDTH_B = "42" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "21504" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "42" *) (* P_MIN_WIDTH_DATA_A = "42" *) (* P_MIN_WIDTH_DATA_B = "42" *) 
(* P_MIN_WIDTH_DATA_ECC = "42" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "42" *) (* P_WIDTH_COL_WRITE_B = "42" *) (* READ_DATA_WIDTH_A = "42" *) 
(* READ_DATA_WIDTH_B = "42" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "42" *) (* WRITE_DATA_WIDTH_B = "42" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "44" *) 
(* rstb_loop_iter = "44" *) 
module design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [41:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [41:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [41:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [41:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [41:0]dina;
  wire [41:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:10]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "41" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "41" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "21504" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "41" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[41:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:10],doutb[41:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "8" *) (* BYTE_WRITE_WIDTH_B = "8" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "2048" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "8" *) (* P_MIN_WIDTH_DATA_A = "8" *) (* P_MIN_WIDTH_DATA_B = "8" *) 
(* P_MIN_WIDTH_DATA_ECC = "8" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "8" *) (* P_WIDTH_COL_WRITE_B = "8" *) (* READ_DATA_WIDTH_A = "8" *) 
(* READ_DATA_WIDTH_B = "8" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "8" *) (* WRITE_DATA_WIDTH_B = "8" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "8" *) 
(* rstb_loop_iter = "8" *) 
module design_1_axi_chip2chip_0_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [7:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [7:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [7:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [7:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][3]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][4]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][5]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][6]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][7]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
YEwuPQIHbkNDxQTeJTgkCVtVyqjBl4yBT+ZdviOr5zOUwfBKlWmE/tdCpADfBjlYqHApCKC9J/KV
Dho7b9EK4z3UPM4HB59BVcpaf37TbLQoqXe5Qy+ZA8X2rpQ7anVwICWUzYfeqpxlmAQLM8k4m3LQ
Fz0nKRbV7kvaOcc2pV8=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
WxOA6j/Kp74/BxxZisufnr4b3mYL4T7rvvcojBGwIZ1KclJna4jz7Q7fiUZMPrU/w5Z99z6ZV+hf
CGcyAffgvFT0vL3OzPA3/28+M6DIkgfq6HCFug/SAnlWNYsRA92gn5qBcUuln1UCcigMaaBkzyT7
qz5N0yl/froFhWJzX72DdDrgg//FqWniS1judDCyy6xxI7xB6ypI5jzuOmnCWoKiwaxywSXOENLk
hDu253qM7830D8c9NkMoK8kj996bVroXVZFc3ej86w0Eu9yXzlvGbWptnm7zvGRTkg/JHnxm20Qp
6hNSmqlQ4mBJK+FLsEmVLwcYr3RkGOSEMOFDFw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dnunDDVo9fB1olePgQuAxW9wNZXJF5H0Nm87vAePdSNktn5aBagpZI8J0ow7FRWzu+KcGngQjnF7
4wzGYBXiEyntf74LVYLh+I+buv/mJAOKSZ9lMXKhiMrDjbavcTm8IjELUEY4cwg0G9N+Qye26y2E
GZ3fBVIALWFkw1Xpi2E=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Q38vLdfubSnkU/paQVe4Q1Y7meHOoRcHy+9qRBWeJg6kZtXacAlbXubeuULHqvYR2eFAMvep+mJd
7UF8jCW5DID2Mxrpfq+dUYTNzeiTctDHbWdOdsmOSDcsRPa2lOUOJbRMsJW1yQkiC1gbrN8RzFeR
3AxUO/Bmu/mJcXv5I5kUvuJTugwaRdiKiwSTh9BnrK8edLVw+Ye4iU8XRa+JLMzMB5KGRDCI+E+K
+JyJStw7P5zf16BmPfbmIdxWp0zzJGpMy/nIHARt3ZLNvdqiw2y921dcDE0nsPSR7dv2Rfisiyu5
BMsLuPDad4MomOJkq5TaAB2HP3QEDq2ZoCHf2g==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
PoNIh1XcE/oxeY9Uh1A5mUjj08uQn/LGSREpi81gngDBHu14g3HJ66Rk0t3P1K2klku4khb6t5Mj
ey0AqtN1hlCuCXnaUb/cI/ql0HWSHlOZezfm7x5KenNM96b68TwVdFEQslTCCMPCQTYLrapZ2JzB
X02QFxLbe9qu3MLM8+/61uHScFmz0Md4A79dTJMPWDaZaZEEW77Y2rDiemJqaaJgTD+fSQZQK/hp
KFJGfDWGtHLk0UtJXg9h5wV+BMzEHP0+sw1YitBhvup7Zgc6VGGHnUyfN/iXsV/LseV5UB8gjQs+
45AwXiOz+oyirKP98/LtclChNhG6hds747iHRA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
i3pgY3WqfETihIlHhRX023Ev+OgDcbLZ3Iw/0tjqWCGe+vMwEAlG2MbXPqCSuw6yPhapCRaOuX4y
S9R6Nz74ZMzgR5yXu7QCwo9PucEWNcouvu3t4+2jx1GrqPe/6+ijPiKt1bZxrj/lYjm2GDHOPbw0
HknL9I3Xp8TZRwX+WmtolRRFoIqdw/YtLfjZFhsYIJsxJvllaiSmC+rtWZ4HlWs/L6T9torAX6ok
waN0gPBqFnvkZHOKY7w7+NRwFsqdPgo06UZzSeJiJjCnSKJTQXGRmBxAAD5E3/Y/NmHzLMEUojiy
Ugw1nDu71CNj31OYsir3FlkuD6nF/UgZCXbCVQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
vXGWecqsU5ayIM8rEQCarKtCSjMACo/Ipl8Ii3dVvIKKElIMsry3unczGS0tZQHcU4wIkQo15B5G
sQP+2FqanIcC0kN3An9oZtKReyCFTkNCAwWPiN26XBg72hLpGhhCsOOPltCWKLoKNLrWhFY7B+HI
Xkon7lE5+U9nhGUxv7S3mDAf7ypLmbKDxPUjyBMhza+xcs0I1tbBzqJGJJ5J9Wb1CoVbDmIzP3Q1
5/9qh/dMGpnNoOpXHSTK4mODJ0ncSVyOex5Ba4EB7nhh6jY22b/VP8BMfLlOIFiWT9otlktCZoja
/fYL+03TC8Kp61X1fDXxO8jeoJE7lRWgjMZzyw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
g/eX4c+WUcQm+3kzvGd2g48l+WCw1XLKz/gptoyJKTHJlebblsnR4zoUmerFZjejyMtHFNwNzFcL
ZYbCnWO3V2pscZeJaQ2r9Smpyj4TGH9+USIn2pVRW82qx98fze/MHczey4N5V/QGNZO1ehHwn74C
xmIwRoGgddEKcObJPNOH++zxVTZ9FAwkLqE5Sb5rnvvOVCn9yuAqmMaGXu80+Jsy0+erPvTHASu9
MV0y/OeR5rvoiAP3/k7GwdhTYWBkNRuViPoURQB0NGFKz2W76nhcLcM5PDe5ut9ouQHEO8nvgf7i
VmcLHNO67etWSsG2Yi0Kgmrp8A3tVRzstU68fdjQCcloyh87RPw4kiOxPNt5hRv0gAMYVVVQsbk2
bFV6LKImZKZmXnvIk8ISHKtN9+4NmNlKbiW6YhP4HrJSSBvuVIE/ZbO6DNNsh7wNAQLLMWFMXBZI
vR44dscjH30C4vEXqq+vKZal6eGCbiyjFF3CwXlz0UHmmAekPWXICxcf

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
myUe+gs19essf/diefiuLWzV3JeCvMD/bYb4hYdMEtspksZUxPpd4T2QcONYWwd/Qc50hI7kZMQg
o+x9lAPcv4BQl2S57nN8pKvQ0j24qV2XLON3jWoybvBxSPluSgNPosEs8UtYehW3RrxcZ2trRQy+
nrSZo4HWtEtUUTmZoDTgAB7HzwG9nJNoDXMJVHdwg5aWsPUxSkZEwywL5EV3rgNNpemqyu56YmyO
wzDZxJSMglPpQCq/+Xsg7ZOOW8ZXnAQLx2yduHGCnUWOHo5KqKed30SiHLz58xAwXNI5AW06+mSI
NmUxSFV4GACM8gdLuzWB6Masc4wsEggjlLVkGQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 297888)
`pragma protect data_block
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
0SIAiISR
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
