// Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.2.2 (lin64) Build 3788238 Tue Feb 21 19:59:23 MST 2023
// Date        : Wed Aug  9 18:48:05 2023
// Host        : uftrig01 running 64-bit Ubuntu 18.04.6 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/agreshil/vivado_projects/fw_i2c_master/apex/control/apex_kria/apex_kria.gen/sources_1/bd/design_1/ip/design_1_axi_chip2chip_1_0/design_1_axi_chip2chip_1_0_sim_netlist.v
// Design      : design_1_axi_chip2chip_1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xck26-sfvc784-2LV-c
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_axi_chip2chip_1_0,axi_chip2chip_v5_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_18,Vivado 2022.2.2" *) 
(* NotValidForBitStream *)
module design_1_axi_chip2chip_1_0
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWID" *) input [5:0]s_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BID" *) output [5:0]s_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARID" *) input [5:0]s_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RID" *) output [5:0]s_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 99999001, ID_WIDTH 6, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 93750000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [31:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [31:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 4, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 93750000, PHASE 0, CLK_DOMAIN design_1_axi_c2c_phy_clk, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 99999001, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [31:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [30:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [5:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [5:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [5:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [5:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire [31:31]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [8:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[31] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[30:0] = \^axi_c2c_aurora_tx_tdata [30:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "2" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* AFIFO_DATA_SIZE = "50" *) 
  (* AFIFO_DATA_SIZE_M2 = "0" *) 
  (* AFIFO_DATA_SIZE_M3 = "2" *) 
  (* AFIFO_DATA_SIZE_M4 = "2" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "50" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "8" *) 
  (* BFIFO_WIDTH = "8" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "32" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "6" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "0" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "0" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "1" *) 
  (* C_INTERFACE_TYPE = "3" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "20" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "9" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "2" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "2" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "0" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "32" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "41" *) 
  (* RFIFO_DATA_SIZE_M2 = "1" *) 
  (* RFIFO_DATA_SIZE_M3 = "2" *) 
  (* RFIFO_DATA_SIZE_M4 = "1" *) 
  (* RFIFO_TIE_WIDTH = "2" *) 
  (* RFIFO_WIDTH = "42" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  design_1_axi_chip2chip_1_0_axi_chip2chip_v5_0_18 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata({NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED[31],\^axi_c2c_aurora_tx_tdata }),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[8:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[8:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[5:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[5:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(s_axi_arid),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(s_axi_awid),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__10
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__11
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__12
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__13
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn_19
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn_27
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn_39
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn_8
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_21
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_28
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_31
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_40
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_43
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_29
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_41
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2_33
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2_45
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_12
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_2
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_9
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_10
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized5_14
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_1_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "42" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "42" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "21504" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "42" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "42" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "8" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "8" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "2048" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "8" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "8" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "3" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  design_1_axi_chip2chip_1_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_35 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_36 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_37 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_38 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn_39 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  design_1_axi_chip2chip_1_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_40 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_41 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_42 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_43 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_44 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2_45 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_0 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_1 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_2 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_3 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "21504" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "42" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "42" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [41:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_4 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_5 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_6 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_7 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn_8 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "42" *) 
  (* BYTE_WRITE_WIDTH_B = "42" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "41" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "42" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "21504" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "42" *) 
  (* P_MIN_WIDTH_DATA_A = "42" *) 
  (* P_MIN_WIDTH_DATA_B = "42" *) 
  (* P_MIN_WIDTH_DATA_ECC = "42" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "42" *) 
  (* P_WIDTH_COL_WRITE_B = "42" *) 
  (* READ_DATA_WIDTH_A = "42" *) 
  (* READ_DATA_WIDTH_B = "42" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "42" *) 
  (* WRITE_DATA_WIDTH_B = "42" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [41:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_9 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_10 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_11 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized3_12 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized4_13 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized5_14 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "2048" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "8" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "8" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "3" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [7:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_16 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_17 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn_19 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "8" *) 
  (* BYTE_WRITE_WIDTH_B = "8" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "2048" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "8" *) 
  (* P_MIN_WIDTH_DATA_A = "8" *) 
  (* P_MIN_WIDTH_DATA_B = "8" *) 
  (* P_MIN_WIDTH_DATA_ECC = "8" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "8" *) 
  (* P_WIDTH_COL_WRITE_B = "8" *) 
  (* READ_DATA_WIDTH_A = "8" *) 
  (* READ_DATA_WIDTH_B = "8" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "8" *) 
  (* WRITE_DATA_WIDTH_B = "8" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "8" *) 
  (* rstb_loop_iter = "8" *) 
  design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [7:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_20 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_21 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_22 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_23 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_24 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_25 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn_27 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  design_1_axi_chip2chip_1_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_28 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_29 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_30 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized0_31 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized1_32 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_counter_updn__parameterized2_33 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_11
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_20
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_30
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_bit_42
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_17
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_23
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_25
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_35
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec_37
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_0
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_16
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_18
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_24
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_26
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_36
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_38
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_4
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized0_6
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_1
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_5
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_reg_vec__parameterized1_7
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__11 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__10 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__13 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__12 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module design_1_axi_chip2chip_1_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  design_1_axi_chip2chip_1_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "50" *) (* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) 
(* P_MIN_WIDTH_DATA_ECC = "50" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "50" *) (* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) 
(* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) 
(* rstb_loop_iter = "52" *) 
module design_1_axi_chip2chip_1_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "50" *) (* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) 
(* P_MIN_WIDTH_DATA_ECC = "50" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "50" *) (* P_WIDTH_COL_WRITE_B = "50" *) (* READ_DATA_WIDTH_A = "50" *) 
(* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) 
(* rstb_loop_iter = "52" *) 
module design_1_axi_chip2chip_1_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "42" *) (* BYTE_WRITE_WIDTH_B = "42" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "21504" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "42" *) (* P_MIN_WIDTH_DATA_A = "42" *) (* P_MIN_WIDTH_DATA_B = "42" *) 
(* P_MIN_WIDTH_DATA_ECC = "42" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "42" *) (* P_WIDTH_COL_WRITE_B = "42" *) (* READ_DATA_WIDTH_A = "42" *) 
(* READ_DATA_WIDTH_B = "42" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "42" *) (* WRITE_DATA_WIDTH_B = "42" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "44" *) 
(* rstb_loop_iter = "44" *) 
module design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [41:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [41:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [41:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [41:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [41:0]dina;
  wire [41:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:10]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "41" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d42" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "41" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "21504" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "41" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[41:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:10],doutb[41:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "8" *) (* BYTE_WRITE_WIDTH_B = "8" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "2048" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "8" *) (* P_MIN_WIDTH_DATA_A = "8" *) (* P_MIN_WIDTH_DATA_B = "8" *) 
(* P_MIN_WIDTH_DATA_ECC = "8" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "8" *) (* P_WIDTH_COL_WRITE_B = "8" *) (* READ_DATA_WIDTH_A = "8" *) 
(* READ_DATA_WIDTH_B = "8" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "8" *) (* WRITE_DATA_WIDTH_B = "8" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "8" *) 
(* rstb_loop_iter = "8" *) 
module design_1_axi_chip2chip_1_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [7:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [7:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [7:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [7:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][3]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][4]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][5]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][6]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][7]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
YEwuPQIHbkNDxQTeJTgkCVtVyqjBl4yBT+ZdviOr5zOUwfBKlWmE/tdCpADfBjlYqHApCKC9J/KV
Dho7b9EK4z3UPM4HB59BVcpaf37TbLQoqXe5Qy+ZA8X2rpQ7anVwICWUzYfeqpxlmAQLM8k4m3LQ
Fz0nKRbV7kvaOcc2pV8=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
WxOA6j/Kp74/BxxZisufnr4b3mYL4T7rvvcojBGwIZ1KclJna4jz7Q7fiUZMPrU/w5Z99z6ZV+hf
CGcyAffgvFT0vL3OzPA3/28+M6DIkgfq6HCFug/SAnlWNYsRA92gn5qBcUuln1UCcigMaaBkzyT7
qz5N0yl/froFhWJzX72DdDrgg//FqWniS1judDCyy6xxI7xB6ypI5jzuOmnCWoKiwaxywSXOENLk
hDu253qM7830D8c9NkMoK8kj996bVroXVZFc3ej86w0Eu9yXzlvGbWptnm7zvGRTkg/JHnxm20Qp
6hNSmqlQ4mBJK+FLsEmVLwcYr3RkGOSEMOFDFw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dnunDDVo9fB1olePgQuAxW9wNZXJF5H0Nm87vAePdSNktn5aBagpZI8J0ow7FRWzu+KcGngQjnF7
4wzGYBXiEyntf74LVYLh+I+buv/mJAOKSZ9lMXKhiMrDjbavcTm8IjELUEY4cwg0G9N+Qye26y2E
GZ3fBVIALWFkw1Xpi2E=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Q38vLdfubSnkU/paQVe4Q1Y7meHOoRcHy+9qRBWeJg6kZtXacAlbXubeuULHqvYR2eFAMvep+mJd
7UF8jCW5DID2Mxrpfq+dUYTNzeiTctDHbWdOdsmOSDcsRPa2lOUOJbRMsJW1yQkiC1gbrN8RzFeR
3AxUO/Bmu/mJcXv5I5kUvuJTugwaRdiKiwSTh9BnrK8edLVw+Ye4iU8XRa+JLMzMB5KGRDCI+E+K
+JyJStw7P5zf16BmPfbmIdxWp0zzJGpMy/nIHARt3ZLNvdqiw2y921dcDE0nsPSR7dv2Rfisiyu5
BMsLuPDad4MomOJkq5TaAB2HP3QEDq2ZoCHf2g==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
PoNIh1XcE/oxeY9Uh1A5mUjj08uQn/LGSREpi81gngDBHu14g3HJ66Rk0t3P1K2klku4khb6t5Mj
ey0AqtN1hlCuCXnaUb/cI/ql0HWSHlOZezfm7x5KenNM96b68TwVdFEQslTCCMPCQTYLrapZ2JzB
X02QFxLbe9qu3MLM8+/61uHScFmz0Md4A79dTJMPWDaZaZEEW77Y2rDiemJqaaJgTD+fSQZQK/hp
KFJGfDWGtHLk0UtJXg9h5wV+BMzEHP0+sw1YitBhvup7Zgc6VGGHnUyfN/iXsV/LseV5UB8gjQs+
45AwXiOz+oyirKP98/LtclChNhG6hds747iHRA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
i3pgY3WqfETihIlHhRX023Ev+OgDcbLZ3Iw/0tjqWCGe+vMwEAlG2MbXPqCSuw6yPhapCRaOuX4y
S9R6Nz74ZMzgR5yXu7QCwo9PucEWNcouvu3t4+2jx1GrqPe/6+ijPiKt1bZxrj/lYjm2GDHOPbw0
HknL9I3Xp8TZRwX+WmtolRRFoIqdw/YtLfjZFhsYIJsxJvllaiSmC+rtWZ4HlWs/L6T9torAX6ok
waN0gPBqFnvkZHOKY7w7+NRwFsqdPgo06UZzSeJiJjCnSKJTQXGRmBxAAD5E3/Y/NmHzLMEUojiy
Ugw1nDu71CNj31OYsir3FlkuD6nF/UgZCXbCVQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
vXGWecqsU5ayIM8rEQCarKtCSjMACo/Ipl8Ii3dVvIKKElIMsry3unczGS0tZQHcU4wIkQo15B5G
sQP+2FqanIcC0kN3An9oZtKReyCFTkNCAwWPiN26XBg72hLpGhhCsOOPltCWKLoKNLrWhFY7B+HI
Xkon7lE5+U9nhGUxv7S3mDAf7ypLmbKDxPUjyBMhza+xcs0I1tbBzqJGJJ5J9Wb1CoVbDmIzP3Q1
5/9qh/dMGpnNoOpXHSTK4mODJ0ncSVyOex5Ba4EB7nhh6jY22b/VP8BMfLlOIFiWT9otlktCZoja
/fYL+03TC8Kp61X1fDXxO8jeoJE7lRWgjMZzyw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
g/eX4c+WUcQm+3kzvGd2g48l+WCw1XLKz/gptoyJKTHJlebblsnR4zoUmerFZjejyMtHFNwNzFcL
ZYbCnWO3V2pscZeJaQ2r9Smpyj4TGH9+USIn2pVRW82qx98fze/MHczey4N5V/QGNZO1ehHwn74C
xmIwRoGgddEKcObJPNOH++zxVTZ9FAwkLqE5Sb5rnvvOVCn9yuAqmMaGXu80+Jsy0+erPvTHASu9
MV0y/OeR5rvoiAP3/k7GwdhTYWBkNRuViPoURQB0NGFKz2W76nhcLcM5PDe5ut9ouQHEO8nvgf7i
VmcLHNO67etWSsG2Yi0Kgmrp8A3tVRzstU68fdjQCcloyh87RPw4kiOxPNt5hRv0gAMYVVVQsbk2
bFV6LKImZKZmXnvIk8ISHKtN9+4NmNlKbiW6YhP4HrJSSBvuVIE/ZbO6DNNsh7wNAQLLMWFMXBZI
vR44dscjH30C4vEXqq+vKZal6eGCbiyjFF3CwXlz0UHmmAekPWXICxcf

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
myUe+gs19essf/diefiuLWzV3JeCvMD/bYb4hYdMEtspksZUxPpd4T2QcONYWwd/Qc50hI7kZMQg
o+x9lAPcv4BQl2S57nN8pKvQ0j24qV2XLON3jWoybvBxSPluSgNPosEs8UtYehW3RrxcZ2trRQy+
nrSZo4HWtEtUUTmZoDTgAB7HzwG9nJNoDXMJVHdwg5aWsPUxSkZEwywL5EV3rgNNpemqyu56YmyO
wzDZxJSMglPpQCq/+Xsg7ZOOW8ZXnAQLx2yduHGCnUWOHo5KqKed30SiHLz58xAwXNI5AW06+mSI
NmUxSFV4GACM8gdLuzWB6Masc4wsEggjlLVkGQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 298736)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
